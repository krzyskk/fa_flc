# Exit immediately if a pipeline [...] returns a non-zero status.
set -e
# Treat unset variables and parameters [...] as an error when performing parameter expansion (substituting).
set -u
# Print a trace of simple commands
set -x

# EC2s are configured with instance profile (a specific role) and all the required policies.

# Replace "your_instance_name" with name of your instance - please remember that this is name of Calluna project, ex ci-#{initials}-sandbox
INSTANCE_NAME="ci-kk4-sandbox"

# Environment variables retrieved from System Manager / Parameter Store (configured with Calluna)
REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r ".region")
VARS=$(aws --region $REGION ssm get-parameters-by-path --recursive --path /calluna/${INSTANCE_NAME}/staging --with-decryption | jq -r '.Parameters | .[] | .Name + "=" + .Value' | sed -e s#/calluna/${INSTANCE_NAME}/staging/##g)

for envvar in ${VARS}; do
  export $envvar;
done

cd /opt/codedeploy-agent/deployment-root/${DEPLOYMENT_GROUP_ID}/${DEPLOYMENT_ID}/deployment-archive
COMPOSE="docker-compose -p ${INSTANCE_NAME} -f docker-compose-staging.yml"
${COMPOSE} build
${COMPOSE} up -d

# Remove unused data, do not prompt for confirmation
docker image prune -f
